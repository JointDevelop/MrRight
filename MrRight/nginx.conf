# Nginx Config

user                root;                   # The User who run Nginx. Suggestion: set an high level user
worker_processes    2;                      # How many worker processes. Suggestion: Keep as many as CPUs
worker_cpu_affinity 01 10;                  # Bind worker processes to which CPU. For example: you have 4 CPUs, then 0001 represent NO.1 CPU, 0010 represent NO.2 CPU...
pid                 /var/log/nginx/nginx.pid;  # Record the pid of Nginx to the file

# About Events model:
events {
    use epoll;                  # Use epoll to deal with IO event
    worker_connections  10240;  # Maximum number of connections per worker process
}

# About Protocal:
http {
    # Basic default settings. (We do not need to change, just use default settings like this.)
    include       mime.types;
    default_type  application/octet-stream;

    # Log Format: The main log for Nginx called main.
    log_format main '$time_local $remote_addr $status $request_time '
                    '$request [$body_bytes_sent/$bytes_sent] '
                    '"$http_user_agent" "$http_referer"';

    # Path of global Request Log and Error Log. The Path is point to global document, it not need to be in MrRight Projects.
    access_log /var/log/nginx/access.log main; # Use "log_format main" that we have already defined above.
    error_log  /var/log/nginx/error.log  warn; # Use warn format that Nginx system default define.

    # About Connections:
    sendfile            on;  # sendfile and tcp_nopush must be the same, usually set them on.
    tcp_nopush          on;
    keepalive_timeout   65;  # connection will keep alive 65s to avoid buil-connect-close frequently.
    gzip                on;  # Gzip to pack the Response package.

    # About Payload Balance:
    upstream app_server {
        server 127.0.0.1:9000       weight=3;
    }


    # For Example: Worker Server needed to change (redirect) entrance of this Web site.
    # server {
        # # For example: All requests to Address 124.71.145.179:80 will be send to this server by Nginx.
        # listen      80;              # listen to 80 export
        # server_name 124.71.145.179;  # domain name (we set it IP addr in temperory)

        # If you need to redirect
        # if ($host = 124.71.145.179) {
        #     return 301 https://$host$request_uri;  # managed by Certbot
        # }
        # return  404;  # managed by Certbot
    # }


    # Worker Server 1: access all requests to 127.0.0.1:80, they are send to nginx, and nginx will distribute them to corresponding server for Payload Balance and Backward Proxy.
    # Tips: This Server is used to test nginx on local, so set server_name 127.0.0.1. When we deploy it online, we will change it to the real domain name.
    server {
        # For example: All requests to Address 127.0.0.1:80 will be send to this server by Nginx.
        listen      80;              # listen to 80 export
        server_name 127.0.0.1;  # domain name (we set it IP addr in temperory)

        # This local path is in the MrRight project. If you don't set local path, Nginx will record logs to global document.
        access_log  /home/lyumin/Projects/Django/MrRight/logs/ngx_access.log  main;  # use access_log main format
        error_log   /home/lyumin/Projects/Django/MrRight/logs/ngx_error.log;

        # Deal with: URL 127.0.0.1:80/favicon.ico.
        # Tips: Nginx will go to /opt/MrRight/static to find this icon, and caches it.
        location = /favicon.ico {  # '=' means Url must be strictly matched.
            root        /home/lyumin/Projects/Django/MrRight/static;  # The icon is in /opt/MrRight/static.
            expires     30d;                  # Cache Expired time.
            access_log  off;                  # Requests by 127.0.0.1:80/favicon.ico do not need to log.
        }

        # Deal with: URL 127.0.0.1:80/static/...
        # Tips: If URL matched '127.0.0.1:80/static/', Nginx will go to /opt/MrRight to find resources at once.
        location /static/ {
            root        /home/lyumin/Projects/Django/MrRight; # For Example: url is 127.0.0.1:80/static/avatat01.jpg, Nginx will find this jpg by the Path /opt/MrRight/static/avatat01.jpg
            expires     30d;
            access_log  off;  # Requests for static resources usually do not need to log.
        }

        # Deal with: URL 127.0.0.1:80/...
        # Tips: The rule of match is 'first-match'.
        #       So, enven though '127.0.0.1:80/static/...' is also matched by this format, it still enters to this block, because 'location /static/' block is ahead of 'location /' block.
        location / {
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;  # append some info to request header because of nginx proxy.
            proxy_set_header  Host $http_host;                             # change host in request header content.
            proxy_redirect    off;                                         # usually do not need redirect.
            proxy_pass        http://127.0.0.1:9000;                       # Nginx will resend this request to 'proxy_pass'
        }
    }

    # Worker Server 2: access all requests to 124.71.145.179:443, they are send to nginx, and nginx will distribute them to corresponding server for Payload Balance and Backward Proxy.
    # server {
        # # For example: All requests to Address 124.71.145.179:443 will be send to this server by Nginx.
        # listen      443 ssl;        # managed by Certbot. ( PS. http + SSL = https )
        # server_name 124.71.145.179;

        # # SSL Certification:
        # ssl_certificate     /etc/letsencrypt/live/124.1.145.179/fullchain.pem;  # managed by Certbot.
        # ssl_certificate_key /etc/letsencrypt/live/124.1.145.179/privkey.pem;    # managed by Certbot.
        # include             /etc/letsencrypt/options-ssl-nginx.conf;            # managed by Certbot.
        # ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;                  # managed by Certbot.

        # # This local path is in the MrRight project. If you don't set local path, Nginx will record logs to global document.
        # access_log  /opt/MrRight/logs/ngx_access.log  main;  # use access_log main format
        # error_log   /opt/MrRight/logs/ngx_error.log;

        # # Logo of Web.
        # location = /favicon.ico {
           # empty_gif;       # Invalid to show icon. This server dose not provide Logo icon show.
           # access_log off;  # requests to Logo icon don't need to log.
        # }

        # location /statics/ {
           # root   /opt/swiper/;
           # expires 30d;
           # access_log off;
        # }

        # location /api/ {
           # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           # proxy_set_header Host $http_host;
           # proxy_redirect off;
           # proxy_pass http://127.0.0.1:9000;
        # }

        # location /chat/ {
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header Host $http_host;
        #     proxy_redirect off;
        #     proxy_pass http://127.0.0.1:5000;
        # }
    # }
}
